# -*- coding: utf-8 -*-
"""Linear_Reg_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15jNNRWbKE2PCmhpNwV4063L7E8SMcLD6

# Simple Linear Regression
"""

class My_LR:
  def __init__(self):
    self.m = None
    self.b = None

  # used to train model -> i.e. calculating values for m and b
  def fit(self,X_train,Y_train):
    # first calculate m's equation's numerator then denominator
    num = 0
    den = 0
    for i in range(X_train.shape[0]):
        num +=  (X_train[i] - X_train.mean())*(Y_train[i] - Y_train.mean())
        den +=  (X_train[i] - X_train.mean())* (X_train[i] - X_train.mean())


    self.m = num/den
    self.b = Y_train.mean() - (self.m * X_train.mean())
    print(self.m)
    print(self.b)

  # prediction Func
  def predict(self,X_test):
    return self.m * X_test + self.b

import numpy as np
import pandas as pd

df = pd.read_csv('/content/placement.csv')

# .values will give an array
X = df.iloc[:,0].values
Y = df.iloc[:,1].values

from sklearn.model_selection import train_test_split
X_train, X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.2,random_state=2)

X_train.shape

lr = My_LR()

lr.fit(X_train,Y_train)

X_test[0]

print(lr.predict(X_test[0]))